import nodemailer from 'nodemailer';

if (!process.env.GMAIL_USER || !process.env.GMAIL_APP_PASSWORD) {
  console.warn("Warning: Gmail credentials not set. Email functionality will be disabled.");
}

// Create transporter with better error handling
let transporter: any = null;

if (process.env.GMAIL_USER && process.env.GMAIL_APP_PASSWORD) {
  try {
    transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_APP_PASSWORD,
      },
      debug: true, // Enable debug logs
    });
    
    // Test the connection
    transporter.verify((error: any, success: any) => {
      if (error) {
        console.error('Gmail SMTP verification failed:', error.message);
      } else {
        console.log('Gmail SMTP server is ready to take our messages');
      }
    });
  } catch (error) {
    console.error('Failed to create Gmail transporter:', error);
  }
}

interface ServiceRequestEmailParams {
  guestName: string;
  roomNumber: string;
  service: string;
  notes?: string;
  timestamp: string;
}

export async function sendServiceRequestEmail(
  params: ServiceRequestEmailParams
): Promise<boolean> {
  // Log the service request details for debugging
  console.log('Service Request Details:', {
    name: params.guestName,
    roomNumber: params.roomNumber,
    service: params.service,
    notes: params.notes,
    timestamp: params.timestamp
  });
  
  if (!process.env.GMAIL_USER || !process.env.GMAIL_APP_PASSWORD) {
    console.log('‚úó Email sending skipped: Gmail credentials not configured');
    console.log('üìß Service request logged above - you can manually check the logs for new requests');
    return false;
  }
  
  if (!transporter) {
    console.log('‚úó Email sending failed: Gmail transporter not initialized');
    console.log('üìß Service request logged above - you can manually check the logs for new requests');
    return false;
  }
  
  try {
    const emailContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #2563eb; border-bottom: 2px solid #2563eb; padding-bottom: 10px;">
          üõéÔ∏è New Service Request - Grand Hotel
        </h2>
        
        <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #1e293b; margin-top: 0;">Request Details</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Guest Name:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.guestName}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Room Number:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.roomNumber}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Service Requested:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.service}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Time Submitted:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.timestamp}</td>
            </tr>
            ${params.notes ? `
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569; vertical-align: top;">Additional Notes:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.notes}</td>
            </tr>
            ` : ''}
          </table>
        </div>
        
        <div style="background-color: #fef3c7; border: 1px solid #f59e0b; padding: 15px; border-radius: 8px;">
          <p style="margin: 0; color: #92400e; font-weight: 500;">
            ‚ö†Ô∏è Please respond to this service request promptly to ensure guest satisfaction.
          </p>
        </div>
        
        <hr style="border: none; height: 1px; background-color: #e2e8f0; margin: 30px 0;">
        
        <p style="color: #64748b; font-size: 14px; margin: 0;">
          This email was automatically generated by the Grand Hotel Service Request System.
        </p>
      </div>
    `;

    await transporter.sendMail({
      to: process.env.GMAIL_USER, // Sends to your own Gmail address
      from: process.env.GMAIL_USER, // Must be the same as authenticated user for Gmail
      subject: `üõéÔ∏è Service Request: ${params.service} - Room ${params.roomNumber}`,
      html: emailContent,
      text: `New Service Request\n\nGuest: ${params.guestName}\nRoom: ${params.roomNumber}\nService: ${params.service}\nTime: ${params.timestamp}\n\nNotes: ${params.notes || 'None'}`,
    });

    return true;
  } catch (error) {
    console.error('Gmail email error:', error);
    return false;
  }
}