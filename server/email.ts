import { MailService } from '@sendgrid/mail';

if (!process.env.SENDGRID_API_KEY) {
  console.warn("Warning: SENDGRID_API_KEY environment variable not set. Email functionality will be disabled.");
}

const mailService = new MailService();
if (process.env.SENDGRID_API_KEY) {
  mailService.setApiKey(process.env.SENDGRID_API_KEY);
}

interface ServiceRequestEmailParams {
  guestName: string;
  roomNumber: string;
  service: string;
  notes?: string;
  timestamp: string;
}

export async function sendServiceRequestEmail(
  params: ServiceRequestEmailParams
): Promise<boolean> {
  if (!process.env.SENDGRID_API_KEY) {
    console.log('Email sending skipped: SENDGRID_API_KEY not configured');
    return false;
  }
  
  try {
    const emailContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #2563eb; border-bottom: 2px solid #2563eb; padding-bottom: 10px;">
          üõéÔ∏è New Service Request - Grand Hotel
        </h2>
        
        <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #1e293b; margin-top: 0;">Request Details</h3>
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Guest Name:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.guestName}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Room Number:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.roomNumber}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Service Requested:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.service}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569;">Time Submitted:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.timestamp}</td>
            </tr>
            ${params.notes ? `
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #475569; vertical-align: top;">Additional Notes:</td>
              <td style="padding: 8px 0; color: #1e293b;">${params.notes}</td>
            </tr>
            ` : ''}
          </table>
        </div>
        
        <div style="background-color: #fef3c7; border: 1px solid #f59e0b; padding: 15px; border-radius: 8px;">
          <p style="margin: 0; color: #92400e; font-weight: 500;">
            ‚ö†Ô∏è Please respond to this service request promptly to ensure guest satisfaction.
          </p>
        </div>
        
        <hr style="border: none; height: 1px; background-color: #e2e8f0; margin: 30px 0;">
        
        <p style="color: #64748b; font-size: 14px; margin: 0;">
          This email was automatically generated by the Grand Hotel Service Request System.
        </p>
      </div>
    `;

    await mailService.send({
      to: 'abhijeet.student.2000@gmail.com', // Your actual email where you want to receive notifications
      from: 'noreply@sandboxed.com', // SendGrid sandbox verified sender
      subject: `üõéÔ∏è Service Request: ${params.service} - Room ${params.roomNumber}`,
      html: emailContent,
      text: `New Service Request\n\nGuest: ${params.guestName}\nRoom: ${params.roomNumber}\nService: ${params.service}\nTime: ${params.timestamp}\n\nNotes: ${params.notes || 'None'}`,
    });

    return true;
  } catch (error) {
    console.error('SendGrid email error:', error);
    return false;
  }
}